#!/usr/bin/env bash
# -*- shell-script -*-

# shellcheck source=lib/utils.sh
source "$(dirname "$(dirname "$(dirname "$0")")")/lib/utils.sh"

asdf_install_command() {
  test "$#" -eq "0" && {
    asdf_install_all_current_tools
    return $?
  }
  test "$#" -eq "1" && {
    asdf_install_current_tool "$1"
    return $?
  }
  asdf_install_tool_at_version "$1" "$2"
}

asdf_install_current_tool() {
  local plugin_name="$1"
  asdf_current_tools |\
    grep "^$plugin_name " |\
    asdf_pipe_empty asdf_install_err_no_install_version |\
    asdf_fn_xargs asdf_install_tool_at_version
}

asdf_install_all_current_tools() {
  asdf_current_tools |\
    asdf_pipe_empty asdf_install_err_no_install_version |\
    asdf_fn_xargs asdf_install_tool_at_version
}

asdf_install_err_no_install_version() {
  asdf_echo_error "You must specify a name and a version to install"
  return 1
}

asdf_install_tool_at_version() {
  local plugin_name full_version
  plugin_name="${1}"
  full_version="${2}"
  asdf_plugin_inside_env "$plugin_name" "$full_version" asdf_install_inside_env
}

asdf_install_inside_env() {
  local plugin_name="${plugin_name-}"
  local full_version="${full_version-}"

  asdf_run_hook_inside_env "pre_asdf_install_${plugin_name}" "${full_version}"
  asdf_plugin_run_inside_env "install"
  asdf reshim "$plugin_name" "$full_version"
  asdf_run_hook_inside_env "post_asdf_install_${plugin_name}" "${full_version}"
}

asdf_install_command "$@"
